<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:hdp="http://www.springframework.org/schema/hadoop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/batch 
	https://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/hadoop https://www.springframework.org/schema/hadoop/spring-hadoop.xsd">
	
	<job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<step id="readWriteProducts">
			<tasklet>
				<chunk reader="jdbcReader" writer="hdfsWriter" commit-interval="3" />				
			</tasklet>			
		</step>
	</job>
	
	<bean id="jdbcReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource"/>
		<property name="sql" value="select id, theme_name, table_name, sql_statement, date from hive_sql_entity  where date in (select date_format(now(),'%Y-%m-%d'))"/>
		<property name="rowMapper" ref="hiveSqlEntityRowMapper"/>
	</bean>

 	<bean id="hiveSqlEntityRowMapper" class="com.oreilly.springdata.domain.HiveSqlEntityRowMapper"/>
		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://172.28.30.95:3306/azkaban" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="suppressClose" value="true" />
	</bean>
	
	<bean id="hdfsWriter" class="com.oreilly.springdata.batch.item.HdfsTextItemWriter">
		<constructor-arg ref="hadoopFs"/>
<!--	    <property name="basePath" value="/import/data/hive/log/dt=2022-11-01/"/>-->
		<property name="baseFilename" value="hiveSqlEntity"/>
		<property name="fileSuffix" value="txt"/>
		<property name="rolloverThresholdInBytes" value="1000"/>
		
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<!--按"^"符号对行进行切割-->
				<property name="delimiter" value='^'/>
				<property name="fieldExtractor">
				  <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
					<property name="names" value="id,theme_name,table_name,sql_statement,date" />
				  </bean>
				</property>
			</bean>			
		</property>
 	</bean>

</beans>
